#
# Updater-script for ArchiDroid
#
ui_print(">>> ArchiDroid is now loading...");
sleep (1);
ui_print("root@ArchiDroid:~# Ready!");
set_progress(0.01);
sleep (2);

ui_print("root@ArchiDroid:~# Unmounting Partitions");
assert(unmount("/system") || ui_print("(system is unmounted already)"));

set_progress(0.02);

if file_getprop("/tmp/aroma-data/wipe.prop","selected.0") == "2" then
	mount("ext4", "EMMC", "/dev/block/stl12", "/system");
	package_extract_file("system/bin/backuptool.sh", "/tmp/backuptool.sh");
	package_extract_file("system/bin/backuptool.functions", "/tmp/backuptool.functions");
	set_perm(0, 0, 0777, "/tmp/backuptool.sh");
	set_perm(0, 0, 0644, "/tmp/backuptool.functions");
	run_program("/tmp/backuptool.sh", "backup");
	unmount("/system");
endif;

set_progress(0.03);

ui_print("root@ArchiDroid:~# Formatting Partitions");
format("ext4", "EMMC", "/dev/block/stl12", "0");

set_progress(0.05);

ui_print("root@ArchiDroid:~# Checking Partitions For Errors");
run_program("/sbin/e2fsck", "-p", "/dev/block/stl12");

set_progress(0.06);

ui_print("root@ArchiDroid:~# Mounting Partitions");
assert(mount("ext4", "EMMC", "/dev/block/stl12", "/system") || ui_print("(system is mounted already)"));

set_progress(0.07);
package_extract_file("_archidroid/scripts/bash", "/tmp/bash");
set_perm(0, 0, 0777, "/tmp/bash");

if file_getprop("/tmp/aroma-data/wipe.prop","selected.0") == "1" then
	ui_print("root@ArchiDroid:~# Formatting /data excluding /data/media");
	package_extract_file("_archidroid/scripts/wipe.sh", "/tmp/wipe.sh");
	set_perm(0, 0, 0777, "/tmp/wipe.sh");
	run_program("/tmp/wipe.sh");
endif;

set_progress(0.08);

if file_getprop("/tmp/aroma-data/wipe.prop","selected.0") == "2" then
	ui_print("root@ArchiDroid:~# Cleaning cache, dalvik cache and resource cache");
	delete_recursive("/data/dalvik-cache");
	delete_recursive("/dalvik/dalvik-cache");
	delete_recursive("/data/resource-cache");
endif;

ui_print("root@ArchiDroid:~# Executing Archi's Scripts");
package_extract_file("_archidroid/scripts/media2zero.sh", "/tmp/media2zero.sh");
set_perm(0, 0, 0777, "/tmp/media2zero.sh");
run_program("/tmp/media2zero.sh");

sleep (1);

package_extract_file("_archidroid/scripts/archidroid.sh", "/tmp/archidroid.sh");
set_perm(0, 0, 0777, "/tmp/archidroid.sh");

if file_getprop("/tmp/aroma-data/wipe.prop","selected.0") == "1" then
	run_program("/tmp/archidroid.sh", "install");
endif;
if file_getprop("/tmp/aroma-data/wipe.prop","selected.0") == "2" then
	run_program("/tmp/archidroid.sh", "update");
endif;

set_progress(0.09);

set_progress(0.1);

ui_print("root@ArchiDroid:~# Flashing ArchiDroid Core");
show_progress(0.4, 1212);
package_extract_dir("system", "/system");

run_program("/sbin/sync");

ui_print("root@ArchiDroid:~# Flashing CSC content");
#package_extract_dir("additions/sec_csc/system", "/system");

set_progress(0.51);

ui_print("root@ArchiDroid:~# Creating symlinks");
symlink("/system/xbin/su", "/system/bin/su");
symlink("Roboto-Bold.ttf", "/system/fonts/DroidSans-Bold.ttf");
symlink("Roboto-Regular.ttf", "/system/fonts/DroidSans.ttf");
symlink("busybox", "/system/xbin/[", "/system/xbin/[[",
        "/system/xbin/adjtimex", "/system/xbin/arp", "/system/xbin/ash",
        "/system/xbin/awk", "/system/xbin/base64", "/system/xbin/basename",
        "/system/xbin/bbconfig", "/system/xbin/blkid", "/system/xbin/blockdev",
        "/system/xbin/brctl", "/system/xbin/bunzip2", "/system/xbin/bzcat",
        "/system/xbin/bzip2", "/system/xbin/cal", "/system/xbin/cat",
        "/system/xbin/catv", "/system/xbin/chattr", "/system/xbin/chgrp",
        "/system/xbin/chmod", "/system/xbin/chown", "/system/xbin/chroot",
        "/system/xbin/clear", "/system/xbin/cmp", "/system/xbin/comm",
        "/system/xbin/cp", "/system/xbin/cpio", "/system/xbin/crond",
        "/system/xbin/crontab", "/system/xbin/cut", "/system/xbin/date",
        "/system/xbin/dc", "/system/xbin/dd", "/system/xbin/depmod",
        "/system/xbin/devmem", "/system/xbin/df", "/system/xbin/diff",
        "/system/xbin/dirname", "/system/xbin/dmesg", "/system/xbin/dnsd",
        "/system/xbin/dos2unix", "/system/xbin/du", "/system/xbin/echo",
        "/system/xbin/ed", "/system/xbin/egrep", "/system/xbin/env",
        "/system/xbin/expand", "/system/xbin/expr", "/system/xbin/false",
        "/system/xbin/fbsplash", "/system/xbin/fdisk", "/system/xbin/fgrep",
        "/system/xbin/find", "/system/xbin/flash_lock",
        "/system/xbin/flash_unlock", "/system/xbin/flashcp",
        "/system/xbin/flock", "/system/xbin/fold", "/system/xbin/free",
        "/system/xbin/freeramdisk", "/system/xbin/fstrim", "/system/xbin/fsync",
        "/system/xbin/ftpget", "/system/xbin/ftpput", "/system/xbin/fuser",
        "/system/xbin/getopt", "/system/xbin/grep", "/system/xbin/groups",
        "/system/xbin/gunzip", "/system/xbin/gzip", "/system/xbin/halt",
        "/system/xbin/head", "/system/xbin/hexdump", "/system/xbin/id",
        "/system/xbin/ifconfig", "/system/xbin/inetd", "/system/xbin/insmod",
        "/system/xbin/install", "/system/xbin/ionice", "/system/xbin/iostat",
        "/system/xbin/ip", "/system/xbin/kill", "/system/xbin/killall",
        "/system/xbin/killall5", "/system/xbin/less", "/system/xbin/ln",
        "/system/xbin/losetup", "/system/xbin/ls", "/system/xbin/lsattr",
        "/system/xbin/lsmod", "/system/xbin/lsusb", "/system/xbin/lzcat",
        "/system/xbin/lzma", "/system/xbin/lzop", "/system/xbin/lzopcat",
        "/system/xbin/man", "/system/xbin/md5sum", "/system/xbin/mesg",
        "/system/xbin/mkdir", "/system/xbin/mke2fs", "/system/xbin/mkfifo",
        "/system/xbin/mkfs.ext2", "/system/xbin/mkfs.vfat",
        "/system/xbin/mknod", "/system/xbin/mkswap", "/system/xbin/mktemp",
        "/system/xbin/modinfo", "/system/xbin/modprobe", "/system/xbin/more",
        "/system/xbin/mount", "/system/xbin/mountpoint", "/system/xbin/mpstat",
        "/system/xbin/mv", "/system/xbin/nanddump", "/system/xbin/nandwrite",
        "/system/xbin/nbd-client", "/system/xbin/netstat", "/system/xbin/nice",
        "/system/xbin/nohup", "/system/xbin/nslookup", "/system/xbin/ntpd",
        "/system/xbin/od", "/system/xbin/patch", "/system/xbin/pgrep",
        "/system/xbin/pidof", "/system/xbin/ping", "/system/xbin/pipe_progress",
        "/system/xbin/pkill", "/system/xbin/pmap", "/system/xbin/poweroff",
        "/system/xbin/printenv", "/system/xbin/printf", "/system/xbin/ps",
        "/system/xbin/pstree", "/system/xbin/pwd", "/system/xbin/pwdx",
        "/system/xbin/rdev", "/system/xbin/readlink", "/system/xbin/realpath",
        "/system/xbin/renice", "/system/xbin/reset", "/system/xbin/resize",
        "/system/xbin/rev", "/system/xbin/rm", "/system/xbin/rmdir",
        "/system/xbin/rmmod", "/system/xbin/route", "/system/xbin/run-parts",
        "/system/xbin/rx", "/system/xbin/sed", "/system/xbin/seq",
        "/system/xbin/setconsole", "/system/xbin/setserial",
        "/system/xbin/setsid", "/system/xbin/sh", "/system/xbin/sha1sum",
        "/system/xbin/sha256sum", "/system/xbin/sha3sum",
        "/system/xbin/sha512sum", "/system/xbin/sleep", "/system/xbin/sort",
        "/system/xbin/split", "/system/xbin/stat", "/system/xbin/strings",
        "/system/xbin/stty", "/system/xbin/sum", "/system/xbin/swapoff",
        "/system/xbin/swapon", "/system/xbin/sync", "/system/xbin/sysctl",
        "/system/xbin/tac", "/system/xbin/tail", "/system/xbin/tar",
        "/system/xbin/taskset", "/system/xbin/tee", "/system/xbin/telnet",
        "/system/xbin/telnetd", "/system/xbin/test", "/system/xbin/tftp",
        "/system/xbin/tftpd", "/system/xbin/time", "/system/xbin/timeout",
        "/system/xbin/top", "/system/xbin/touch", "/system/xbin/tr",
        "/system/xbin/traceroute", "/system/xbin/true", "/system/xbin/ttysize",
        "/system/xbin/tune2fs", "/system/xbin/umount", "/system/xbin/uname",
        "/system/xbin/uncompress", "/system/xbin/unexpand", "/system/xbin/uniq",
        "/system/xbin/unix2dos", "/system/xbin/unlzma", "/system/xbin/unlzop",
        "/system/xbin/unxz", "/system/xbin/unzip", "/system/xbin/uptime",
        "/system/xbin/usleep", "/system/xbin/uudecode", "/system/xbin/uuencode",
        "/system/xbin/vi", "/system/xbin/watch", "/system/xbin/wc",
        "/system/xbin/wget", "/system/xbin/which", "/system/xbin/whoami",
        "/system/xbin/xargs", "/system/xbin/xz", "/system/xbin/xzcat",
        "/system/xbin/yes",
        "/system/xbin/zcat");
symlink("mksh", "/system/bin/sh");
symlink("toolbox", "/system/bin/cat", "/system/bin/chmod",
        "/system/bin/chown", "/system/bin/cmp", "/system/bin/cp",
        "/system/bin/date", "/system/bin/dd", "/system/bin/df",
        "/system/bin/dmesg", "/system/bin/du", "/system/bin/getevent",
        "/system/bin/getprop", "/system/bin/grep", "/system/bin/hd",
        "/system/bin/id", "/system/bin/ifconfig", "/system/bin/iftop",
        "/system/bin/insmod", "/system/bin/ioctl", "/system/bin/ionice",
        "/system/bin/kill", "/system/bin/ln", "/system/bin/log",
        "/system/bin/ls", "/system/bin/lsmod", "/system/bin/lsof",
        "/system/bin/md5", "/system/bin/mkdir", "/system/bin/mount",
        "/system/bin/mv", "/system/bin/nandread", "/system/bin/netstat",
        "/system/bin/newfs_msdos", "/system/bin/notify", "/system/bin/printenv",
        "/system/bin/ps", "/system/bin/r", "/system/bin/reboot",
        "/system/bin/renice", "/system/bin/restart", "/system/bin/rm",
        "/system/bin/rmdir", "/system/bin/rmmod", "/system/bin/route",
        "/system/bin/schedtop", "/system/bin/sendevent",
        "/system/bin/setconsole", "/system/bin/setprop", "/system/bin/sleep",
        "/system/bin/smd", "/system/bin/start", "/system/bin/stop",
        "/system/bin/sync", "/system/bin/top", "/system/bin/touch",
        "/system/bin/umount", "/system/bin/uptime", "/system/bin/vmstat",
        "/system/bin/watchprops",
        "/system/bin/wipe");
		
set_progress(0.52);
		
ui_print("root@ArchiDroid:~# Flashing ArchiDroid Init Scripts");
### IMPORTANT ###
package_extract_dir("_archidroid/auto", "/");
### IMPORTANT ###

set_progress(0.53);

ui_print("root@ArchiDroid:~# Setting Permissions");
set_perm_recursive(0, 0, 0755, 0644, "/system");
set_perm_recursive(0, 0, 0755, 0755, "/system/addon.d");
set_perm_recursive(0, 2000, 0755, 0755, "/system/bin");
set_perm(0, 3003, 02750, "/system/bin/netcfg");
set_perm(0, 3004, 02755, "/system/bin/ping");
set_perm(0, 2000, 06750, "/system/bin/run-as");
set_perm(1002, 1002, 0440, "/system/etc/dbus.conf");
set_perm(1014, 2000, 0550, "/system/etc/dhcpcd/dhcpcd-run-hooks");
set_perm_recursive(0, 2000, 0755, 0755, "/system/etc/init.d");
set_perm(0, 0, 0755, "/system/etc/init.d");
set_perm(0, 2000, 0550, "/system/etc/init.goldfish.sh");
set_perm_recursive(0, 0, 0755, 0555, "/system/etc/ppp");
set_perm_recursive(0, 2000, 0755, 0644, "/system/vendor");
set_perm(0, 0, 0644, "/system/vendor/etc/audio_effects.conf");
set_perm_recursive(0, 2000, 0755, 0755, "/system/xbin");
set_perm(0, 0, 06755, "/system/xbin/hcitool");
set_perm(0, 0, 06755, "/system/xbin/librank");
set_perm(0, 0, 06755, "/system/xbin/procmem");
set_perm(0, 0, 06755, "/system/xbin/procrank");
set_perm(0, 0, 06755, "/system/xbin/su");

set_progress(0.54);


##############
### KERNEL ###
##############

# We need to make sure that current kernel is CM-based to prevent random zygote kernel panics
ui_print("root@ArchiDroid:~# Cleaning Old Kernel");
package_extract_file("boot.img", "/tmp/stock.img");
write_raw_image("/tmp/stock.img", "/dev/block/mmcblk0p5");
delete("/tmp/stock.img");

### TEMASEK ###
if file_getprop("/tmp/aroma-data/kernels.prop","selected.0") == "1" then
	ui_print("root@ArchiDroid:~# Flashing Temasek Kernel");
	delete_recursive("/data/.temasek");
	delete_recursive("/system/lib/modules");
	package_extract_dir("_archidroid/kernels/temasek/system", "/system");
	set_perm_recursive(0, 0, 0755, 0755, "/system/lib/modules/");
	set_perm(0, 0, 0755, "/system/bin/hostapd");
	package_extract_dir("_archidroid/kernels/temasek/kernel", "/tmp");
	set_perm(0, 0, 0777, "/tmp/dump_image");
	set_perm(0, 0, 0777, "/tmp/mkbootimg.sh");
	set_perm(0, 0, 0777, "/tmp/mkbootimg");
	set_perm(0, 0, 0777, "/tmp/unpackbootimg");
	set_perm(0, 0, 0777, "/tmp/cpio");
	set_perm(0, 0, 0777, "/tmp/res/uci.sh");
	set_perm(0, 0, 0777, "/tmp/sbin/temasek.sh");
	run_program("/tmp/dump_image", "/dev/block/mmcblk0p5", "/tmp/boot.img");
	run_program("/tmp/unpackbootimg", "-i", "/tmp/boot.img", "-o", "/tmp/");
	run_program("/tmp/mkbootimg.sh");
	run_program("/sbin/busybox", "dd", "if=/tmp/newboot.img", "of=/dev/block/mmcblk0p5");
	
	if file_getprop("/tmp/aroma-data/kernels2.prop","selected.0") == "1" then
		ui_print("root@ArchiDroid:~# Applying ArchiDroid Balanced kernel config");
		package_extract_dir("_archidroid/presets/temasek/archi", "/data/.temasek");
	endif;
	if file_getprop("/tmp/aroma-data/kernels2.prop","selected.0") == "2" then
		ui_print("root@ArchiDroid:~# Applying ArchiDroid PowerSave kernel config");
		package_extract_dir("_archidroid/presets/temasek/archi_powersave", "/data/.temasek");
	endif;
	if file_getprop("/tmp/aroma-data/kernels2.prop","selected.0") == "3" then
		ui_print("root@ArchiDroid:~# Applying ArchiDroid ULTRA PowerSave kernel config");
		package_extract_dir("_archidroid/presets/temasek/archi_ultra_powersave", "/data/.temasek");
	endif;
	
	package_extract_dir("_archidroid/apps/stweaks", "/");
	
endif;

### YANK ###
if file_getprop("/tmp/aroma-data/kernels.prop","selected.0") == "2" then
	ui_print("root@ArchiDroid:~# Flashing Yank555.lu Kernel");
	delete_recursive("/system/lib/modules");
	delete("/system/etc/init.kernel.sh");
	delete("/system/etc/init.hardswap.sh");
	delete("/data/kernel-script.log");
	delete("/data/hardswap.log");
	delete("/data/swap.0.log");
	delete("/data/swap.1.log");
	delete("/data/swap.2.log");
	delete("/data/swap.3.log");
	delete("/data/swap.4.log");

    package_extract_dir("_archidroid/kernels/yank/system", "/system");
	set_perm_recursive(0, 0, 0755, 0755, "/system/lib/modules/");
	package_extract_file("_archidroid/kernels/yank/boot.img", "/tmp/yank.img");
    write_raw_image("/tmp/yank.img", "/dev/block/mmcblk0p5");
    delete("/tmp/yank.img");
endif;

### GOOGY-MAX ###
if file_getprop("/tmp/aroma-data/kernels.prop","selected.0") == "3" then
	ui_print("root@ArchiDroid:~# Flashing Googy-Max Kernel");
	package_extract_file("_archidroid/kernels/googymax/boot.img", "/tmp/googymax.img");
    write_raw_image("/tmp/googymax.img", "/dev/block/mmcblk0p5");
    delete("/tmp/googymax.img");
	package_extract_dir("_archidroid/apps/stweaks", "/");
endif;

### STOCK CM ###
if file_getprop("/tmp/aroma-data/kernels.prop","selected.0") == "4" then
	ui_print("root@ArchiDroid:~# Flashing CM Kernel");
	
	# Not needed since zygote kernel panic fix
    #package_extract_file("boot.img", "/tmp/stock.img");
    #write_raw_image("/tmp/stock.img", "/dev/block/mmcblk0p5");
    #delete("/tmp/stock.img");
endif;

set_progress(0.6);


###############
### RESTORE ###
###############

if file_getprop("/tmp/aroma-data/wipe.prop","selected.0") == "2" then
	ui_print("root@ArchiDroid:~# Restoring Addons");
	package_extract_file("system/bin/backuptool.sh", "/tmp/backuptool.sh");
	package_extract_file("system/bin/backuptool.functions", "/tmp/backuptool.functions");
	set_perm(0, 0, 0777, "/tmp/backuptool.sh");
	set_perm(0, 0, 0644, "/tmp/backuptool.functions");
	run_program("/tmp/backuptool.sh", "restore");
	delete("/system/bin/backuptool.sh");
	delete("/system/bin/backuptool.functions");;
endif;

set_progress(0.61);


###########
### DPI ###
###########

### 240 ###
if file_getprop("/tmp/aroma-data/dpi.prop","selected.0") == "1" then
	ui_print("root@ArchiDroid:~# Applying 240 DPI Fixes");
	package_extract_file("_archidroid/dpi/240dpi.sh", "/tmp/240dpi.sh");
	set_perm(0, 0, 0777, "/tmp/240dpi.sh");
	run_program("/tmp/240dpi.sh");
endif;

### 241 ###
if file_getprop("/tmp/aroma-data/dpi.prop","selected.0") == "2" then
	ui_print("root@ArchiDroid:~# Applying 241 DPI Fixes");
	package_extract_file("_archidroid/dpi/241dpi.sh", "/tmp/241dpi.sh");
	set_perm(0, 0, 0777, "/tmp/241dpi.sh");
	run_program("/tmp/241dpi.sh");
endif;
	
### 280 ###
if file_getprop("/tmp/aroma-data/dpi.prop","selected.0") == "3" then
	ui_print("root@ArchiDroid:~# Applying 280 DPI Fixes");
	package_extract_file("_archidroid/dpi/280dpi.sh", "/tmp/280dpi.sh");
	set_perm(0, 0, 0777, "/tmp/280dpi.sh");
	run_program("/tmp/280dpi.sh");
endif;

### 320 ###
if file_getprop("/tmp/aroma-data/dpi.prop","selected.0") == "4" then
	ui_print("root@ArchiDroid:~# Applying 320 DPI Fixes");
	package_extract_file("_archidroid/dpi/320dpi.sh", "/tmp/320dpi.sh");
	set_perm(0, 0, 0777, "/tmp/320dpi.sh");
	run_program("/tmp/320dpi.sh");
endif;

set_progress(0.65);


###############################
### ArchiDroid Audio Tweaks ###
###############################

if file_getprop("/tmp/aroma-data/boeffla.prop","selected.0") == "1" then
		ui_print("root@ArchiDroid:~# Installing Boeffla SC with Archi's Audiophile preset");
		package_extract_dir("_archidroid/apps/boeffla", "/");
		package_extract_dir("_archidroid/presets/boeffla", "/");
		#symlink("/data/data/com.near.boefflasound/lib", "data/app-lib/com.near.boefflasound");
endif;
	
if file_getprop("/tmp/aroma-data/boeffla.prop","selected.0") == "2" then
		ui_print("root@ArchiDroid:~# Installing Boeffla SC");
		package_extract_dir("_archidroid/apps/boeffla/system/app", "/system/app");
endif;

set_progress(0.66);


##############
### TWEAKS ###
##############

### ArchiDroid Tweaks ###
ui_print("root@ArchiDroid:~# Applying ArchiDroid Tweaks");

if file_getprop("/tmp/aroma-data/architweaks.prop","item.0.1") == "1" then
	ui_print("root@ArchiDroid:~# Applying Logcat Bootscreen");
	package_extract_dir("_archidroid/logcat", "/");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin");
	set_perm(0, 0, 06755, "/system/bin/boot-dmesg");
endif;

if file_getprop("/tmp/aroma-data/architweaks.prop","item.0.2") == "1" then
	ui_print("root@ArchiDroid:~# Applying HD Voice Tweak");
	package_extract_dir("_archidroid/tweaks/hdvoice", "/");
endif;

if file_getprop("/tmp/aroma-data/architweaks.prop","item.0.3") == "1" then
	ui_print("root@ArchiDroid:~# Applying build.prop Tweaks");
	package_extract_file("_archidroid/tweaks/build.prop/tweaks.sh", "/tmp/tweaks.sh");
	set_perm(0, 0, 0777, "/tmp/tweaks.sh");
	run_program("/tmp/tweaks.sh");
endif;

if file_getprop("/tmp/aroma-data/architweaks.prop","item.0.4") == "1" then
	ui_print("root@ArchiDroid:~# Applying OpenPDroid Patch");
	package_extract_dir("_archidroid/tweaks/openpdroid", "/");
	set_perm_recursive(0, 0, 0755, 0644, "/system/app");
	set_perm_recursive(0, 0, 0755, 0644, "/system/framework");
	set_perm_recursive(0, 0, 0755, 0644, "/system/media");
endif;

if file_getprop("/tmp/aroma-data/architweaks.prop","item.0.5") == "1" then
	ui_print("root@ArchiDroid:~# Removing Cell Broadcasts");
	delete("/system/app/CellBroadcastReceiver.apk");
endif;

set_progress(0.7);

#############
### MODEM ###
#############

package_extract_file("_archidroid/modem/flash_image", "/tmp/flash_image");
set_perm(0, 0, 0777, "/tmp/flash_image");

if file_getprop("/tmp/aroma-data/modem.prop","selected.0") == "1" then
	ui_print("root@ArchiDroid:~# Flashing XXEMG4 Modem");
	assert(package_extract_file("_archidroid/modem/xxemg4.bin", "/tmp/modem.bin"),
	run_program("/tmp/flash_image", "/dev/block/mmcblk0p7", "/tmp/modem.bin"),
	delete("/tmp/modem.bin"));
endif;

delete("/tmp/flash_image");

set_progress(0.75);


##############
### XPOSED ###
##############

if file_getprop("/tmp/aroma-data/xposed.prop","selected.0") == "1" then

	ui_print("root@ArchiDroid:~# Including Xposed Framework");
	package_extract_dir("_archidroid/apps/xposed/xposed", "/");
	
	if file_getprop("/tmp/aroma-data/xposed2.prop","item.0.1") == "1" then
		ui_print("root@ArchiDroid:~# Including App Settings Xposed Module");
		package_extract_dir("_archidroid/apps/xposed/appsettings", "/");
	endif;
	
endif;

set_progress(0.76);


################
### RECOVERY ###
################

### PHILZ ###
if file_getprop("/tmp/aroma-data/recovery.prop","selected.0") == "1" then
	ui_print("root@ArchiDroid:~# Flashing PhilZ Recovery");
	assert(package_extract_file("recovery.img", "/tmp/recovery.img"),
	write_raw_image("/tmp/recovery.img", "/dev/block/mmcblk0p6"));
endif;

set_progress(0.77);


###########
### OTA ###
###########

if file_getprop("/tmp/aroma-data/ota.prop","selected.0") == "1" then
	ui_print("root@ArchiDroid:~# Applying ArchiDroid OTA");
	package_extract_file("_archidroid/ota/ota.sh", "/tmp/ota.sh");
	set_perm(0, 0, 0777, "/tmp/ota.sh");
	run_program("/tmp/ota.sh");
	package_extract_dir("_archidroid/ota/app", "/");
endif;

set_progress(0.78);


################
### KEYBOARD ###
################

### TOUCHPAL ###
if file_getprop("/tmp/aroma-data/keyboard.prop","selected.0") == "1" then
delete("/system/app/LatinIME.apk");
ui_print("root@ArchiDroid:~# Installing TouchPal Keyboard");
package_extract_dir("_archidroid/apps/touchpal", "/");
endif;

### HACKERS ###
if file_getprop("/tmp/aroma-data/keyboard.prop","selected.0") == "2" then
ui_print("root@ArchiDroid:~# Installing Hacker's Keyboard");
delete("/system/app/LatinIME.apk");
package_extract_dir("_archidroid/apps/hackers", "/");
endif;

### BOTH ###
if file_getprop("/tmp/aroma-data/keyboard.prop","selected.0") == "3" then
ui_print("root@ArchiDroid:~# Installing TouchPal + Hacker's Keyboard");
delete("/system/app/LatinIME.apk");
package_extract_dir("_archidroid/apps/touchpal", "/");
package_extract_dir("_archidroid/apps/hackers", "/");
endif;

### STOCK ###
if file_getprop("/tmp/aroma-data/keyboard.prop","selected.0") == "4" then
ui_print("root@ArchiDroid:~# Installing AOSP Keyboard");
# Not needed, haha!
endif;

set_progress(0.79);


################
### LAUNCHER ###
################

### NOVA ###
if file_getprop("/tmp/aroma-data/launcher.prop","selected.0") == "1" then
ui_print("");
ui_print("");
ui_print("root@ArchiDroid:~# Installing Nova Launcher");
delete("/system/app/Trebuchet.apk");
package_extract_dir("_archidroid/apps/nova", "/");
endif;

### STOCK ###
if file_getprop("/tmp/aroma-data/launcher.prop","selected.0") == "2" then
ui_print("");
ui_print("");
ui_print("root@ArchiDroid:~# Installing Trebuchet");
# Not needed, haha!
endif;

set_progress(0.8);


#############
### GAPPS ###
#############

if file_getprop("/tmp/aroma-data/gapps.prop","item.0.1") == "1" then
	ui_print("root@ArchiDroid:~# Installing Google Apps");
	delete("/system/app/Provision.apk","/system/app/QuickSearchBox.apk","/system/app/SetupWizard.apk","/system/app/Velvet.apk","/system/app/Vending.apk","/system/app/BrowserProviderProxy.apk","/system/app/PartnerBookmarksProvider.apk","/system/app/Gmail2.apk");
	package_extract_dir("_archidroid/gapps/system", "/system");
	set_perm(0, 0, 0755, "/system/addon.d/70-gapps.sh");
	package_extract_dir("_archidroid/gapps/optional", "/tmp");
	package_extract_file("_archidroid/gapps/install-optional.sh", "/tmp/install-optional.sh");
	set_perm(0, 0, 0777, "/tmp/install-optional.sh");
	run_program("/tmp/install-optional.sh", "");
	set_perm_recursive(0, 0, 0755, 0644, "/system/app");
endif;

if file_getprop("/tmp/aroma-data/gapps.prop","item.0.2") == "0" then
	delete("/system/app/QuickSearchBox.apk");
endif;

if file_getprop("/tmp/aroma-data/gapps.prop","item.0.3") == "1" then
	ui_print("root@ArchiDroid:~# Installing Google Calendar");
	package_extract_dir("_archidroid/apps/gcalendar", "/");
endif;

if file_getprop("/tmp/aroma-data/gapps.prop","item.0.4") == "1" then
	ui_print("root@ArchiDroid:~# Installing Google Chrome");
	package_extract_dir("_archidroid/apps/gchrome", "/");
endif;

if file_getprop("/tmp/aroma-data/gapps.prop","item.0.5") == "1" then
	ui_print("root@ArchiDroid:~# Installing Google Ears");
	package_extract_dir("_archidroid/apps/gears", "/");
endif;

if file_getprop("/tmp/aroma-data/gapps.prop","item.0.6") == "1" then
	ui_print("root@ArchiDroid:~# Installing Google Keep");
	package_extract_dir("_archidroid/apps/gkeep", "/");
endif;

if file_getprop("/tmp/aroma-data/gapps.prop","item.0.7") == "1" then
	ui_print("root@ArchiDroid:~# Installing Google Mail");
	package_extract_dir("_archidroid/apps/gmail", "/");
endif;

if file_getprop("/tmp/aroma-data/gapps.prop","item.0.8") == "1" then
	ui_print("root@ArchiDroid:~# Installing Google Maps");
	package_extract_dir("_archidroid/apps/gmaps", "/");
endif;

if file_getprop("/tmp/aroma-data/gapps.prop","item.0.9") == "1" then
	ui_print("root@ArchiDroid:~# Installing Google Voice");
	package_extract_dir("_archidroid/apps/gvoice", "/");
	delete("/system/app/VoiceSearchStub.apk");
	delete("/system/app/GoogleSearchWidget.apk");
	delete("/system/app/QuickSearchBox.apk");
endif;

if file_getprop("/tmp/aroma-data/gapps.prop","item.0.10") == "1" then
	ui_print("root@ArchiDroid:~# Installing Google Hangouts");
	package_extract_dir("_archidroid/apps/ghangouts", "/");
endif;

if file_getprop("/tmp/aroma-data/gapps.prop","item.0.11") == "1" then
	ui_print("root@ArchiDroid:~# Installing Google Now");
	package_extract_dir("_archidroid/apps/gnow", "/");
endif;

if file_getprop("/tmp/aroma-data/gapps.prop","item.0.12") == "1" then
	ui_print("root@ArchiDroid:~# Installing Google Plus");
	package_extract_dir("_archidroid/apps/gplus", "/");
endif;

set_progress(0.85);


###############
### TWEAKS2 ###
###############
	
	
############
### APPS ###
############

if file_getprop("/tmp/aroma-data/archiapps.prop","item.0.1") == "1" then
	ui_print("root@ArchiDroid:~# Installing Titanium Backup");
	package_extract_dir("_archidroid/apps/titaniumbackup", "/");
endif;

if file_getprop("/tmp/aroma-data/archiapps.prop","item.0.2") == "1" then
	ui_print("root@ArchiDroid:~# Installing ZRAM Status");
	package_extract_dir("_archidroid/apps/zramstatus", "/");
endif;

if file_getprop("/tmp/aroma-data/archiapps.prop","item.0.3") == "1" then
	ui_print("root@ArchiDroid:~# Installing Greenify");
	package_extract_dir("_archidroid/apps/greenify", "/");
endif;

if file_getprop("/tmp/aroma-data/archiapps.prop","item.0.4") == "1" then
	ui_print("root@ArchiDroid:~# Installing LMT");
	package_extract_dir("_archidroid/apps/lmt", "/");
endif;

if file_getprop("/tmp/aroma-data/archiapps.prop","item.0.5") == "1" then
	ui_print("root@ArchiDroid:~# Installing MXPlayer");
	package_extract_dir("_archidroid/apps/mxplayer", "/");
endif;

if file_getprop("/tmp/aroma-data/archiapps.prop","item.0.6") == "1" then
	ui_print("root@ArchiDroid:~# Installing Rotate");
	package_extract_dir("_archidroid/apps/rotate", "/");
endif;

if file_getprop("/tmp/aroma-data/archiapps.prop","item.0.7") == "1" then
	ui_print("root@ArchiDroid:~# Installing Spirit FM");
	package_extract_dir("_archidroid/apps/spiritfm", "/");
endif;

if file_getprop("/tmp/aroma-data/archiapps.prop","item.0.8") == "1" then
	ui_print("root@ArchiDroid:~# Installing BetterBatteryStats");
	package_extract_dir("_archidroid/apps/betterbatterystats", "/");
endif;

if file_getprop("/tmp/aroma-data/archiapps.prop","item.0.9") == "1" then
	ui_print("root@ArchiDroid:~# Installing CoolTool");
	package_extract_dir("_archidroid/apps/cooltool", "/");
endif;

if file_getprop("/tmp/aroma-data/archiapps.prop","item.0.10") == "1" then
	ui_print("root@ArchiDroid:~# Installing Root Browser");
	package_extract_dir("_archidroid/apps/rootbrowser", "/");
endif;

if file_getprop("/tmp/aroma-data/archiapps.prop","item.0.11") == "1" then
	ui_print("root@ArchiDroid:~# Installing Adobe Flash Player");
	package_extract_dir("_archidroid/apps/adobeflash", "/");
endif;

if file_getprop("/tmp/aroma-data/archiapps.prop","item.0.12") == "1" then
	ui_print("root@ArchiDroid:~# Installing YouTube");
	package_extract_dir("_archidroid/apps/youtube", "/");
endif;

set_progress(0.90);


# One more fix to logcat
ui_print("root@ArchiDroid:~# Syncing System");
#set_perm(1000, 1000, 0771, "/data");
#set_perm_recursive(1000, 1000, 0771, 0644, "/data/app");
#set_perm_recursive(0, 0, 0771, 0660, "/data/data");
run_program("/sbin/sync");

set_progress(0.92);


####################
### CROSSBREADER ###
####################

if file_getprop("/tmp/aroma-data/breeder.prop","selected.0") == "1" then
	ui_print("root@ArchiDroid:~# Installing CrossBreeder");
	
	# Freeze Fix
	unmount("/system");
	unmount("/data");

	package_extract_dir("setup_crossbreeder", "/tmp"); 

set_perm_recursive(0, 0, 0755, 0755, "/tmp");
run_program("/sbin/busybox","chmod","-R","0755","/tmp");
run_program("/sbin/busybox","chown","-R","0.0","/tmp");
set_perm(0, 0, 0755, "/tmp/busybox");
run_program("/tmp/busybox","chmod","-R","0755","/tmp");
run_program("/tmp/busybox","chown","-R","0.0","/tmp");
run_program("/tmp/busybox","mount","/system");
run_program("/sbin/busybox","mount","/system");
run_program("/tmp/busybox","mount","-o","rw,remount","/system");
run_program("/sbin/busybox","mount","-o","rw,remount","/system");
run_program("/tmp/busybox","mount","/data");
run_program("/sbin/busybox","mount","/data");
run_program("/tmp/busybox","mount","-o","rw,remount","/data");
run_program("/sbin/busybox","mount","-o","rw,remount","/data");

run_program("/tmp/busybox","rm","-fr","/system/etc/CrossBreeder");

run_program("/tmp/busybox","mkdir","-p","/system/etc/CrossBreeder");
run_program("/tmp/busybox","cp","-f","/tmp/tune2fs","/system/etc/CrossBreeder");
#run_program("/tmp/busybox","cp","-f","/tmp/libiconv.so.2","/system/etc/CrossBreeder");
run_program("/tmp/busybox","cp","-f","/tmp/busybox","/system/etc/CrossBreeder");
set_perm_recursive(0, 0, 0755, 0755, "/system/etc/CrossBreeder");
run_program("/tmp/busybox","chown","-R","0.0","/system/etc/CrossBreeder");
run_program("/tmp/busybox","chmod","-R","0755","/system/etc/CrossBreeder");

run_program("/tmp/busybox", "echo", "Restore", "started.");
run_program("/tmp/restore_dnsmasq.sh");
run_program("/tmp/busybox","echo","After","Restore");
#run_program("/tmp/busybox","mv","-f","/system/etc/hosts","/system/etc/hosts.CBBAK");
	package_extract_dir("system_crossbreeder", "/system");
run_program("/tmp/busybox","cp","-f","/tmp/recovery.log","/data/recovery_cb.log");
#run_program("/tmp/busybox","cp","-f","/system/etc/CrossBreeder/dnsmasq","/system/bin/dnsmasq.bin");
delete("/system/bin/dnsmasq.bin");
run_program("/tmp/busybox", "ls", "-l", "/system/bin/dnsmasq");; 
set_perm_recursive(0, 0, 0755, 0755, "/system/etc/CrossBreeder");

run_program("/tmp/busybox","chown","-R","0.0","/system/etc/CrossBreeder");
run_program("/tmp/busybox","chmod","-R","0755","/system/etc/CrossBreeder");

#set_perm_recursive(0, 0, 0711, 0444, "/system/etc/CrossBreeder/root");

#run_program("/tmp/busybox","chown","-R","0.0","/system/etc/CrossBreeder/root");
#run_program("/tmp/busybox","chmod","-R","0444","/system/etc/CrossBreeder/root");
#run_program("/tmp/busybox","chmod","0711","/system/etc/CrossBreeder/root");
#run_program("/tmp/busybox","chmod","0711","/system/etc/CrossBreeder/root/errors");

run_program("/tmp/busybox","chown","-R","0.0","/system/etc/CrossBreeder/dnrd_root");
run_program("/tmp/busybox","chmod","-R","0644","/system/etc/CrossBreeder/dnrd_root");
run_program("/tmp/busybox","chmod","0755","/system/etc/CrossBreeder/dnrd_root");

#set_perm(0, 0, 0755, "/system/etc/init.d/zzCrossBreeder_initd");
set_perm(0, 2000, 0755, "/system/xbin/haveged");
delete("/system/xbin/CB_FileLock");
set_perm(0, 0, 0755, "/system/etc/CrossBreeder/busybox");
set_perm(0, 0, 0755, "/system/etc/CrossBreeder/dnrd.10053");
set_perm(0, 0, 0755, "/system/etc/CrossBreeder/zzCrossBreeder");
set_perm(0, 0, 0755, "/system/etc/CrossBreeder/zzCHECK_NET_DNS");
set_perm(0, 0, 0755, "/system/bin/dnsmasq");
set_perm(0, 0, 0755, "/system/bin/dnsmasq_dhcp");
#set_perm(0, 0, 0644, "/system/etc/CrossBreeder/dnsmasq-host");
set_perm(0, 0, 0644, "/system/etc/resolv.conf");
set_perm(0, 0, 0644, "/system/etc/hosts");
set_perm(0, 0, 0644, "/system/etc/CrossBreeder/hosts");
delete("/system/etc/init.d/00CrossBreeder");
delete("/system/etc/init.d/zzCrossBreeder");
delete("/system/etc/init.d/zzCrossBreeder_initd");
#delete("/system/etc/CrossBreeder/dnsmasq");

set_perm(0, 0, 0755, "/system/etc/install-recovery.sh");
run_program("/tmp/busybox","mv","-f","/system/etc/install-recovery.sh.CBBAK","/system/etc/install-recovery.sh");
run_program("/tmp/install_init_entries.sh");
#run_program("/tmp/install_hw_entries.sh");
#run_program("/sbin/busybox","mv","-f","/system/etc/hw_config.sh.CBBAK","/system/etc/hw_config.sh");
run_program("/tmp/busybox","mv","-f","/system/bin/debuggerd.CBBAK","/system/bin/debuggerd");
set_perm(0, 2000, 0755, "/system/bin/debuggerd");
run_program("/tmp/install_debuggerd.sh");

run_program("/tmp/busybox","mv","/system/xbin/rngd","/system/xbin/rngd.bak");
run_program("/tmp/busybox","rm","-fr","/data/rngd.pid");
run_program("/tmp/busybox","mkdir","/data/rngd.pid/");
run_program("/tmp/busybox","chown","0:0","/data/rngd.pid");
run_program("/tmp/busybox","chmod","-R","500","/data/rngd.pid");
set_perm_recursive(0, 0, 0500, 0500, " /data/rngd.pid/ ");
run_program("/tmp/busybox","mv","/system/xbin/qrngd","/system/xbin/qrngd.bak");
run_program("/tmp/busybox","mv","/system/bin/qrngd","/system/bin/qrngd.bak");
run_program("/tmp/REMOVE_TETHER_BOOST");
run_program("/tmp/busybox","mv","-f","/system/etc/dnsmasq.conf.CBBAK","/system/etc/dnsmasq.conf");
run_program("/tmp/busybox","sync");
#run_program("/tmp/busybox","umount","/system");
run_program("/tmp/busybox","cp","-f","/tmp/recovery.log","/data/recovery_cb.log");
run_program("/tmp/busybox","sync");

run_program("/tmp/busybox","umount","/data");
#run_program("/tmp/busybox","umount","/cache");
run_program("/tmp/busybox","umount","/sd-ext");

	# Freeze fix
	sleep (1);
	assert(mount("ext4", "EMMC", "/dev/block/mmcblk0p9", "/system") || ui_print("(system is mounted already)"));
	assert(mount("ext4", "EMMC", "/dev/block/mmcblk0p12", "/data") || ui_print("(data is mounted already)"));
endif;

set_progress(0.98);


run_program("/sbin/sync");

set_progress(0.99);

ui_print("root@ArchiDroid:~# Unmounting partitions");
assert(unmount("/system") || ui_print("(system is unmounted already)"));

ui_print("===================================");
ui_print("  ArchiDroid Flashed Successfully  ");
ui_print("Please share your experience on XDA");
ui_print("===================================");
run_program("/sbin/busybox", "cp", "/tmp/recovery.log", "/sdcard/recovery.log");
set_progress(1.0);
